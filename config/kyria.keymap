/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
#define DEFAULT 0
#define LOWER   1
#define RAISE   2
#define UTIL    3

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>

&left_encoder {
    resolution = <2>;
};

/ {
    behaviors {
        rh_pht: left_hand_positional_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "POSITIONAL_HOLD_TAP";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <100>;
            quick-tap-ms = <200>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29>;
        };

        lh_pht: right_hand_positional_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "POSITIONAL_HOLD_TAP";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <100>;
            quick-tap-ms = <200>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 32 33 34 35 36 37>;
        };
    };

    combos {
        compatible = "zmk,combos";

// left
        combo_esc {
            timeout-ms = <50>;
            key-positions = <2 3>;
            bindings = <&kp ESC>;
        };

        combo_tab {
            timeout-ms = <50>;
            key-positions = <3 4>;
            bindings = <&kp TAB>;
        };

        combo_cut {
            timeout-ms = <50>;
            key-positions = <25 26>;
            bindings = <&kp K_CUT>;
        };

        combo_copy {
            timeout-ms = <50>;
            key-positions = <26 27>;
            bindings = <&kp K_COPY>;
        };

        combo_paste {
            timeout-ms = <50>;
            key-positions = <27 28>;
            bindings = <&kp K_PASTE>;
        };

// right
        combo_bspc {
            timeout-ms = <50>;
            key-positions = <31 32>;
            bindings = <&kp BSPC>;
        };

        combo_del {
            timeout-ms = <50>;
            key-positions = <32 33>;
            bindings = <&kp DEL>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
// --------------------------------------------- Colemak - DH -------------------------------------------
// |     |  Q  |  W  |  F  |  P  |  B  |                            |  J  |  L  |  U  |  Y  |  ;  |     |
// |  Q  |  A  |  R  |  S  |  T  |  G  |                            |  M  |  N  |  E  |  I  |  O  |  ;  |
// |     |  Z  |  X  |  C  |  D  |  V  |  ESC  | SPC |  | RET | GUI |  K  |  H  |  ,  |  .  |  /  |     |
//                   | MUT | TAB | CTR |  SFT  | SPC |  | RET | BSP | DEL | ALT |     |

            label = "Default";

            bindings = <
    &none &kp Q          &kp W          &kp F           &kp P           &kp B                                                                    &kp J   &kp L           &kp U           &kp Y          &kp SEMI       &none
    &kp Q &lh_pht LGUI A &lh_pht LALT R &lh_pht LSHFT S &lh_pht LCTRL T &kp G                                                                    &kp M   &rh_pht LCTRL N &rh_pht LSHFT E &rh_pht LALT I &rh_pht LGUI O &kp SEMI
    &none &kp Z          &kp X          &kp C           &kp D           &kp V         &gresc        &lt LOWER SPACE  &lt RAISE RET &kp LGUI      &kp K   &kp H           &kp COMMA       &kp DOT        &lt UTIL FSLH  &none
                                        &kp C_MUTE      &kp TAB         &mt LCTRL ESC &mt LSHFT TAB &lt LOWER SPACE  &lt RAISE RET &mt RALT BSPC &kp DEL &kp LALT        &kp C_PP 
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp PG_DN PG_UP>;
        };

        modifier_layer { // keys on each side compliment each other in some way
// ------------------------------------------ MODIFIER LAYER -------------------------------------------
// |     |  <  |  [  |  {  |  (  |  /  |                           |  \  |  )  |  }  |  ]  |  >  |     |
// |  <  |  #  |  *  |  +  |  _  |  @  |                           |  &  |  -  |  =  |  ^  |  $  |  >  |
// |     |  %  |  !  |  `  |  :  |  '  | ESC |     |  | RET |  GUI |  "  |  ;  |  ~  |  ?  |  |  |     |
//                   | MUT | TAB | CTR | SFT |     |  | RET |  BSP | DEL | ALT |     |

            label = "Modifier";

            bindings = <
    &trans &kp LT    &kp LBKT  &kp LBRC   &kp LPAR  &kp FSLH                                                  &kp BSLH &kp RPAR  &kp RBRC  &kp RBKT  &kp GT   &trans
    &kp LT &kp HASH  &kp STAR  &kp PLUS   &kp UNDER &kp AT                                                    &kp AMPS &kp MINUS &kp EQUAL &kp CARET &kp DLLR &kp GT
    &trans &kp PRCNT &kp EXCL  &kp GRAVE  &kp COLON &kp APOS  &gresc  &lt LOWER SPACE  &lt RAISE RET &kp LGUI &kp DQT  &kp SEMI  &kp TILDE &kp QMARK &kp PIPE &trans
                                  &kp C_MUTE &kp TAB   &kp LCTRL &kp TAB &lt LOWER SPACE  &lt RAISE RET &kp BSPC &kp DEL  &kp LALT  &kp C_PP
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp PG_DN PG_UP>;
        };

        number_layer {
// ------------------------------------------ NUMBER LAYER --------------------------------------------
// |     | ESC |  7  |  8  |  9  |  ,  |                          | DWN | RGT |     |     |     |     |
// | ESC | TAB |  4  |  5  |  6  |  0  |                          | HME | PGD | PGU | END |     |     |
// |     | CPS |  1  |  2  |  3  |  .  | ESC | SPC |  |     | GUI |  UP | LFT |     |     |     |     |
//                   | MUT | TAB | CTR | SFT | SPC |  |     | BSP | DEL | ALT |     |

            label = "Number";

            bindings = <
    &trans &gresc   &kp N7 &kp N8     &kp N9  &kp DOT                                                   &kp DOWN &kp RIGHT &none     &none   &none  &trans
    &gresc &kp TAB  &kp N4 &kp N5     &kp N6  &kp N0                                                    &kp HOME &kp PG_DN &kp PG_UP &kp END &none  &trans
    &trans &kp CAPS &kp N1 &kp N2     &kp N3  &kp COMMA &gresc  &lt LOWER SPACE  &lt RAISE RET &kp LGUI &kp UP   &kp LEFT  &none     &none   &none  &trans
                           &kp C_MUTE &kp TAB &kp LCTRL &kp TAB &lt LOWER SPACE  &lt RAISE RET &kp BSPC &kp DEL  &kp LALT  &kp C_PP
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp PG_DN PG_UP>;
        };

        utility_layer {
// ----------------------------------------- UTILITY LAYER --------------------------------------------
// | F1  | F2  | F3  | F4  | F5  | F6  |                          | F7  | F8  | F9  | F10 | F11 | F12 |
// | EFF | SPI | BRI | SAI | HUI | TOG |                          | BT0 | BT1 | BT2 | BT3 | BT4 |     |
// | EFR | SPD | BRD | SAD | HUD | PTG | ESC | SPC |  |     | GUI | PTG | NXT | PRV | CLR |     | BTG |
//                   | MUT | TAB | CTR | SFT | SPC |  |     | BSP | DEL | ALT | GMR |

            label = "Utility";

            bindings = <
    &kp F1          &kp F2           &kp F3          &kp F4           &kp F5            &kp F6                                                                       &kp F7            &kp F8       &kp F9       &kp F10      &kp F11      &kp F12
    &rgb_ug RGB_EFF &rgb_ug RGB_SPI  &rgb_ug RGB_BRI &rgb_ug RGB_SAI  &rgb_ug RGB_HUI   &rgb_ug RGB_TOG                                                              &bt BT_SEL 0      &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &none
    &rgb_ug RGB_EFR &rgb_ug RGB_SPD  &rgb_ug RGB_BRD &rgb_ug RGB_SAD  &rgb_ug RGB_HUD   &ext_power EP_TOG &gresc        &lt LOWER SPACE  &lt RAISE RET &kp LGUI      &ext_power EP_TOG &bt BT_NXT   &bt BT_PRV   &bt BT_CLR   &trans       &out OUT_TOG
                                                     &kp C_MUTE       &kp TAB           &kp LCTRL         &mt LSHFT TAB &lt LOWER SPACE  &lt RAISE RET &mt RALT BSPC &kp DEL           &kp LALT     &kp C_PP
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp PG_DN PG_UP>;
        };          
    };
};
